{"version":3,"file":"static/js/511.7c69a2de.chunk.js","mappings":"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","sources":["components/MainTitle/MainTitle.styled.js","components/MainTitle/MainTitle.jsx","api/categories.js","components/AddRecipeForm/AddRecipeForm.styled.js","components/RecipePreparationFields/RecipePreparationFields.styled.js","components/RecipePreparationFields/RecipePreparationFields.jsx","components/AddRecipeForm/AddRecipeForm.jsx","pages/AddRecipePage/AddRecipePage.jsx"],"sourcesContent":["import { styled } from 'styled-components';\nimport { SIZE } from 'constants';\n\nexport const PageHeader = styled.h1`\n    margin-top: 50px;\n    font-size: 28px;\n    font-weight: 600;\n\n    @media screen and (min-width: ${SIZE.tablet}) {\n        margin-top: 72px;\n        font-size: 32px;\n    }\n\n    @media screen and (min-width: ${SIZE.desktop}) {\n        margin-top: 100px;\n        font-size: 44px;\n    }\n`;\n","import { PageHeader } from './MainTitle.styled';\n\nconst MainTitle = ({ title }) => {\n    return <PageHeader>{title}</PageHeader>;\n};\n\nexport default MainTitle;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://project-yummy-b.onrender.com/api';\n\nexport const fetchCategories = async () => {\n    try {\n        const response = await axios.get('/recipes/category-list');\n        return response.data;\n    } catch (err) {\n        console.log(err);\n    }\n};\n","import { styled } from 'styled-components';\nimport { SIZE } from 'constants';\n\nexport const RecipeForm = styled.form`\n    margin-top: 72px;\n\n    @media screen and (min-width: ${SIZE.tablet}) {\n        margin-top: 100px;\n    }\n`;\n","import { styled } from 'styled-components';\n\nexport const SectionTitle = styled.h2`\n    font-size: 24px;\n    font-weight: 600;\n`;\n","import { useFormikContext } from 'formik';\n\nimport { SectionTitle } from './RecipePreparationFields.styled';\n\nconst RecipePreparationFields = () => {\n    const { values, handleChange, handleBlur } = useFormikContext();\n\n    return (\n        <>\n            <SectionTitle>Recipe Preparation</SectionTitle>\n            <textarea\n                name=\"preparation\"\n                placeholder=\"Enter recipe\"\n                onChange={handleChange}\n                onBlur={handleBlur}\n                value={values.preparation}\n            ></textarea>\n        </>\n    );\n};\n\nexport default RecipePreparationFields;\n","import { useEffect, useState } from 'react';\nimport { Formik } from 'formik';\n\nimport { fetchCategories } from 'api/categories';\nimport { RecipeForm } from './AddRecipeForm.styled';\nimport RecipePreparationFields from 'components/RecipePreparationFields/RecipePreparationFields';\n\nconst AddRecipeForm = () => {\n    const [categories, setCategories] = useState([]);\n\n    useEffect(() => {\n        const getCategories = async () => {\n            const result = await fetchCategories();\n            setCategories(result);\n        };\n        getCategories();\n    }, []);\n\n    console.log(categories);\n\n    return (\n        <Formik\n            initialValues={{ preparation: '' }}\n            onSubmit={values => {\n                alert(JSON.stringify(values, null, 2));\n            }}\n        >\n            {({ values, handleSubmit }) => (\n                <RecipeForm onSubmit={handleSubmit}>\n                    <RecipePreparationFields />\n                    <button type=\"submit\">Submit</button>\n                </RecipeForm>\n            )}\n        </Formik>\n    );\n};\n\nexport default AddRecipeForm;\n","import { MainContainer } from 'components/Container/Container.styled';\nimport MainTitle from 'components/MainTitle/MainTitle';\nimport AddRecipeForm from 'components/AddRecipeForm/AddRecipeForm';\n\nconst AddRecipePage = () => {\n    return (\n        <MainContainer>\n            <MainTitle title={'Add recipe'} />\n            <AddRecipeForm />\n        </MainContainer>\n    );\n};\n\nexport default AddRecipePage;\n"],"names":["PageHeader","styled","_templateObject","_taggedTemplateLiteral","SIZE","_ref","title","_jsx","children","axios","fetchCategories","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","sent","abrupt","data","t0","console","log","stop","apply","arguments","RecipeForm","SectionTitle","_useFormikContext","useFormikContext","values","handleChange","handleBlur","_jsxs","_Fragment","name","placeholder","onChange","onBlur","value","preparation","_useState","useState","_useState2","_slicedToArray","categories","setCategories","useEffect","getCategories","result","Formik","initialValues","onSubmit","alert","JSON","stringify","_ref2","handleSubmit","RecipePreparationFields","type","MainContainer","MainTitle","AddRecipeForm"],"sourceRoot":""}