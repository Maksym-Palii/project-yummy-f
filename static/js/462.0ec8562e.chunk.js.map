{"version":3,"file":"static/js/462.0ec8562e.chunk.js","mappings":"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","sources":["api/categories.js","api/recipies.js","api/recipeById.js","api/mainPage.js","api/index.js","components/CardCategorie/CardCategorie.jsx","pages/CategoriesPage/CategoriesPage.jsx"],"sourcesContent":["import axios from 'axios';\nimport { baseUrl } from 'constants';\n\naxios.defaults.baseURL = baseUrl;\n\nconst fetchCategories = async () => {\n  const response = await axios.get('api/recipes/category-list');\n  return response.data;\n};\n\nexport default fetchCategories;\n","import axios from 'axios';\nimport { baseUrl } from 'constants';\n\naxios.defaults.baseURL = baseUrl;\n\nconst fetchRecipies = async (categoryName, page = 1, limit = 8) => {\n  // we have to try/catch set on top\n  const response = await axios.get(\n    `api/recipes/category/${categoryName}?page=${page}&limit=${limit}`\n  );\n  return response.data;\n};\n\nexport default fetchRecipies;\n","import axios from 'axios';\nimport { baseUrl } from 'constants';\n\naxios.defaults.baseURL = baseUrl;\n\nconst getRecipeById = async recipeId => {\n  const res = await axios.get(`/recipes/${recipeId}`);\n  return res.data;\n};\n\nexport default getRecipeById;\n","import axios from 'axios';\nimport { baseUrl } from 'constants';\n\naxios.defaults.baseURL = baseUrl;\n\nconst fetchRecipesMainPage = async () => {\n\tconst response = await axios.get('/recipes/main-page');\n  return response.data;\n};\n\nexport default fetchRecipesMainPage;","import fetchCategories from './categories';\nimport fetchRecipies from './recipies';\nimport getRecipeById from './recipeById';\nimport fetchRecipesMainPage from './mainPage'\n\nconst API = { fetchCategories, fetchRecipies, getRecipeById, fetchRecipesMainPage };\n\nexport default API;\n","import {\n  Card,\n  CardActionArea,\n  CardMedia,\n  CardContent,\n  Typography,\n} from '@mui/material';\n\nconst CardCategorie = ({ id, title, thumb, handleRecipe }) => {\n  return (\n    <Card onClick={() => handleRecipe(id)} sx={{ position: 'relative' }}>\n      <CardActionArea>\n        <CardMedia\n          sx={{\n            height: '323px',\n            width: '100%',\n            position: 'relative',\n            borderRadius: '8px',\n          }}\n          component=\"img\"\n          image={thumb}\n          alt={title}\n        />\n        <CardContent\n          sx={{\n            p: 2,\n            left: '16px',\n            right: '16px',\n            position: 'absolute',\n            bottom: '24px',\n            backgroundColor: 'white',\n            borderRadius: '8px',\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            color=\"text.secondary\"\n            sx={{\n              color: ' #3E4462',\n\n              fontFamily: 'Poppins',\n              fontSize: '16px',\n              fontWeight: '500',\n              lineHeight: '20px',\n              letterSpacing: '-0.24px',\n            }}\n          >\n            {title}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nexport default CardCategorie;\n","import { Box, Grid, Pagination, Tab, Tabs, Typography } from '@mui/material';\nimport { useState, useEffect } from 'react';\n\nimport { Container } from 'components/Container/Container';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport CardCategorie from 'components/CardCategorie/CardCategorie';\nimport API from 'api';\n\nconst CategoriesPage = () => {\n  const navigate = useNavigate();\n\n  const [recipieArr, setRecipieArr] = useState([]);\n  const [categoriesArr, setCategoriesArr] = useState([]);\n  const [page, setPage] = useState(1);\n  const { categoryName } = useParams();\n\n  // download list categories name\n  useEffect(() => {\n    const categoriesList = async () => {\n      try {\n        setCategoriesArr(await API.fetchCategories());\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    categoriesList();\n  }, []);\n\n  // set RecipierArr and url to initial state\n  useEffect(() => {\n    const oneCategorie = async categoryName => {\n      try {\n        const res = await API.fetchRecipies(categoryName);\n        setRecipieArr(res?.recipes);\n      } catch (err) {\n        console.log(err);\n      }\n    };\n    const tempCategoryName =\n      categoryName === ':categoryName' ? 'beef' : categoryName;\n    oneCategorie(tempCategoryName);\n    navigate(`/categories/${tempCategoryName}`);\n  }, [categoryName, navigate]);\n\n  const handleChange = (event, newValue) => {\n    navigate(`/categories/${newValue}`);\n  };\n\n  const setPageHandler = async (_, value) => {\n    setPage(value);\n    try {\n      const res = await API.fetchRecipies(categoryName, page);\n      setRecipieArr(res?.recipes);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  // transition to RecipePage\n  const chooseRecipe = id => {\n    navigate(`/recipe/${id}`);\n  };\n\n  return (\n    <section>\n      <Container>\n        <Typography\n          variant=\"h2\"\n          sx={{\n            color: '#001833',\n            fontFamily: 'Poppins',\n            fontWeight: '600',\n            lineHeight: '1',\n            pt: {\n              xs: 6.5,\n              md: 9,\n              lg: 20.5,\n            },\n            fontSize: {\n              xs: '28px',\n              md: '32px',\n              lg: '44px',\n            },\n            letterSpacing: {\n              xs: '-0.56px',\n              md: '-0.64px',\n              lg: '-0.88px',\n            },\n            mb: { xs: '28px', md: '32px', lg: '72px' },\n          }}\n        >\n          Categories\n        </Typography>\n\n        <Box\n          sx={{\n            width: '100%',\n          }}\n        >\n          {categoriesArr?.length && categoryName !== ':categoryName' && (\n            <Tabs\n              sx={{\n                mt: 10,\n                borderBottom: '1px solid #eaeaea',\n              }}\n              value={categoryName}\n              onChange={handleChange}\n              variant=\"scrollable\"\n              scrollButtons=\"auto\"\n            >\n              {categoriesArr.length &&\n                categoriesArr.map(categ => (\n                  <Tab\n                    sx={{\n                      py: { xs: '32px', md: '28px' },\n                      px: { xs: '14px', md: '28px' },\n                      textTransform: 'capitalize',\n                      color: '#BDBDBD',\n                      fontWeight: '400',\n                      lineHeight: '1',\n                      fontFamily: 'Poppins',\n                      fontSize: { xs: '14px', md: '18px' },\n                    }}\n                    key={categ}\n                    value={categ.toLowerCase()}\n                    label={categ}\n                  />\n                ))}\n            </Tabs>\n          )}\n        </Box>\n\n        <Grid\n          container\n          pt={{ xs: '32px', md: '50px' }}\n          mb={{ xs: '60px', md: '100px' }}\n          rowSpacing={{ xs: 3.5, md: 4, lg: 12.5 }}\n          columnSpacing={{ md: 4, lg: 1.5 }}\n        >\n          {recipieArr &&\n            recipieArr.length &&\n            recipieArr?.map(({ _id, title, thumb }) => (\n              <Grid item xs={12} md={6} lg={3} key={_id}>\n                <CardCategorie\n                  handleRecipe={chooseRecipe}\n                  id={_id}\n                  title={title}\n                  thumb={thumb}\n                ></CardCategorie>\n              </Grid>\n            ))}\n        </Grid>\n\n        <Pagination\n          count={10}\n          page={page}\n          onChange={setPageHandler}\n          variant=\"outlined\"\n          color=\"primary\"\n        />\n      </Container>\n    </section>\n  );\n};\n\nexport default CategoriesPage;\n"],"names":["axios","baseUrl","fetchCategories","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","sent","abrupt","data","stop","apply","arguments","fetchRecipies","categoryName","page","limit","_args","length","undefined","concat","_x","getRecipeById","recipeId","res","fetchRecipesMainPage","id","title","thumb","handleRecipe","_jsx","Card","onClick","sx","position","children","_jsxs","CardActionArea","CardMedia","height","width","borderRadius","component","image","alt","CardContent","p","left","right","bottom","backgroundColor","Typography","variant","color","fontFamily","fontSize","fontWeight","lineHeight","letterSpacing","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","recipieArr","setRecipieArr","_useState3","_useState4","categoriesArr","setCategoriesArr","_useState5","_useState6","setPage","useParams","useEffect","categoriesList","t0","API","t1","t2","console","log","oneCategorie","_ref2","_callee2","_context2","recipes","tempCategoryName","setPageHandler","_ref3","_callee3","_","value","_context3","_x2","_x3","chooseRecipe","Container","pt","xs","md","lg","mb","Box","Tabs","mt","borderBottom","onChange","event","newValue","scrollButtons","map","categ","Tab","py","px","textTransform","toLowerCase","label","Grid","container","rowSpacing","columnSpacing","_ref4","_id","item","CardCategorie","Pagination","count"],"sourceRoot":""}