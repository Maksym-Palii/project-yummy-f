{"version":3,"file":"static/js/550.eb9f9ef1.chunk.js","mappings":"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","sources":["api/categories.js","api/recipies.js","api/recipeById.js","api/mainPage.js","api/index.js","components/SharedLayout/SharedLayoutStyled.js","components/CardCategorie/CardCategorie.jsx","components/Title/Title.styled.js","components/Title/Title.jsx","pages/CategoriesPage/CategoriesList/CategoriesList.jsx","pages/CategoriesPage/CategoriesPage.jsx"],"sourcesContent":["import axios from 'axios';\nimport { baseUrl } from 'constants';\n\naxios.defaults.baseURL = baseUrl;\n\nconst fetchCategories = async () => {\n  const response = await axios.get('api/recipes/category-list');\n  return response.data;\n};\n\nexport default fetchCategories;\n","import axios from 'axios';\nimport { baseUrl } from 'constants';\n\naxios.defaults.baseURL = baseUrl;\n\nconst fetchRecipies = async (categoryName, page = 1, limit = 8) => {\n  // we have to try/catch set on top\n  const response = await axios.get(\n    `api/recipes/category/${categoryName}?page=${page}&limit=${limit}`\n  );\n  return response.data;\n};\n\nexport default fetchRecipies;\n","import axios from 'axios';\nimport { baseUrl } from 'constants';\n\naxios.defaults.baseURL = baseUrl;\n\nconst getRecipeById = async recipeId => {\n  const res = await axios.get(`api/recipes/${recipeId}`);\n  return res.data;\n};\n\nexport default getRecipeById;\n","import axios from 'axios';\nimport { baseUrl } from 'constants';\n\naxios.defaults.baseURL = baseUrl;\n\nconst fetchRecipesMainPage = async () => {\n  const response = await axios.get('api/recipes/main-page');\n  return response.data;\n};\n\nexport default fetchRecipesMainPage;\n","import fetchCategories from './categories';\nimport fetchRecipies from './recipies';\nimport getRecipeById from './recipeById';\nimport fetchRecipesMainPage from './mainPage'\n\nconst API = { fetchCategories, fetchRecipies, getRecipeById, fetchRecipesMainPage };\n\nexport default API;\n","const { styled, Box } = require('@mui/material');\n\nconst ThemeWrap = styled(Box)(({ theme }) => ({\n  backgroundColor: theme.palette.background.default,\n}));\n\nexport default ThemeWrap;\n","import {\n  Card,\n  CardActionArea,\n  CardMedia,\n  CardContent,\n  Typography,\n} from '@mui/material';\n\nconst CardCategorie = ({ id, title, thumb, handleRecipe }) => {\n  return (\n    <Card onClick={() => handleRecipe(id)} sx={{ position: 'relative' }}>\n      <CardActionArea>\n        <CardMedia\n          sx={{\n            height: '323px',\n            width: '100%',\n            position: 'relative',\n            borderRadius: '8px',\n          }}\n          component=\"img\"\n          image={thumb}\n          alt={title}\n        />\n        <CardContent\n          sx={{\n            p: 2,\n            left: '16px',\n            right: '16px',\n            position: 'absolute',\n            bottom: '24px',\n            backgroundColor: 'white',\n            borderRadius: '8px',\n          }}\n        >\n          <Typography\n            variant=\"body2\"\n            color=\"text.secondary\"\n            sx={{\n              color: ' #3E4462',\n\n              fontFamily: 'Poppins',\n              fontSize: '16px',\n              fontWeight: '500',\n              lineHeight: '20px',\n              letterSpacing: '-0.24px',\n            }}\n          >\n            {title}\n          </Typography>\n        </CardContent>\n      </CardActionArea>\n    </Card>\n  );\n};\n\nexport default CardCategorie;\n","const { styled, Typography } = require('@mui/material');\n\nconst TitleTheme = styled(Typography)(({ theme }) => ({\n  color: theme.palette.text.primary,\n}));\n\nexport default TitleTheme;\n","import TitleTheme from './Title.styled';\n\nexport default function Title({ children }) {\n  return (\n    <TitleTheme\n      variant=\"h2\"\n      sx={{\n        fontFamily: 'Poppins',\n        fontWeight: '600',\n        lineHeight: '1',\n        pt: {\n          xs: 6.5,\n          md: 9,\n          lg: 20.5,\n        },\n        fontSize: {\n          xs: '28px',\n          md: '32px',\n          lg: '44px',\n        },\n        letterSpacing: {\n          xs: '-0.56px',\n          md: '-0.64px',\n          lg: '-0.88px',\n        },\n        mb: { xs: '28px', md: '32px', lg: '72px' },\n      }}\n    >\n      {children}\n    </TitleTheme>\n  );\n}\n","import { Box, Tab, Tabs } from '@mui/material';\nimport API from 'api';\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nexport default function CategoriesList({ onError }) {\n  const [err, setErr] = useState(false);\n  const [categoriesArr, setCategoriesArr] = useState([]);\n  const { categoryName } = useParams();\n  const navigate = useNavigate();\n\n  // download list categories name\n  useEffect(() => {\n    const categoriesList = async () => {\n      try {\n        setCategoriesArr(await API.fetchCategories());\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    categoriesList();\n  }, []);\n\n  useEffect(() => {\n    if (\n      !categoriesArr?.length ||\n      !categoriesArr?.find(name => name.toLowerCase() === categoryName)\n    ) {\n      setErr(true);\n      onError(\"Don't find categorie\");\n    } else {\n      setErr(false);\n      onError(false);\n    }\n  }, [categoriesArr, categoryName, onError]);\n\n  const handleChange = (event, newValue) => {\n    navigate(`/categories/${newValue}`);\n  };\n\n  return (\n    !err && (\n      <Box\n        sx={{\n          width: '100%',\n        }}\n      >\n        <Tabs\n          sx={{\n            mt: 10,\n            borderBottom: '1px solid #eaeaea',\n          }}\n          value={categoryName}\n          onChange={handleChange}\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n        >\n          {categoriesArr?.map(categ => (\n            <Tab\n              sx={{\n                py: { xs: '32px', md: '28px' },\n                px: { xs: '14px', md: '28px' },\n                textTransform: 'capitalize',\n                color: '#BDBDBD',\n                fontWeight: '400',\n                lineHeight: '1',\n                fontFamily: 'Poppins',\n                fontSize: { xs: '14px', md: '18px' },\n              }}\n              key={categ}\n              value={categ.toLowerCase()}\n              label={categ}\n            />\n          ))}\n        </Tabs>\n      </Box>\n    )\n  );\n}\n","import { Grid, Pagination } from '@mui/material';\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport { Container } from 'components/Container/Container';\nimport CardCategorie from 'components/CardCategorie/CardCategorie';\nimport API from 'api';\nimport Title from 'components/Title/Title';\nimport CategoriesList from './CategoriesList/CategoriesList';\nimport NotFoundPage from 'pages/NotFoundPage/NotFoundPage';\nimport ThemeWrap from 'components/SharedLayout/SharedLayoutStyled';\n\nconst CategoriesPage = () => {\n  const navigate = useNavigate();\n  const [recipieArr, setRecipieArr] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(0);\n  const { categoryName } = useParams();\n  const [error, setError] = useState(false);\n\n  // set RecipierArr and url to initial state\n  useEffect(() => {\n    const oneCategorie = async categoryName => {\n      try {\n        const res = await API.fetchRecipies(categoryName);\n        if (res?.recipes) {\n          setRecipieArr(res?.recipes);\n          setTotalPages(res?.totalPages);\n          setPage(1);\n          setError(false);\n        } else throw new Error('dont find this categories');\n      } catch (err) {\n        setRecipieArr([]);\n        setError(true);\n        console.log(err);\n      }\n    };\n    const tempCategoryName =\n      categoryName === ':categoryName' ? 'beef' : categoryName;\n    oneCategorie(tempCategoryName);\n    navigate(`/categories/${tempCategoryName}`);\n  }, [categoryName, navigate]);\n\n  const setPageHandler = async (_, value) => {\n    setPage(value);\n    try {\n      const res = await API.fetchRecipies(categoryName, value);\n      if (res?.recipes) {\n        setRecipieArr(res?.recipes);\n        setError(false);\n      } else throw new Error('dont find this category');\n    } catch (err) {\n      setRecipieArr([]);\n      setError(true);\n      console.log(err);\n    }\n  };\n\n  // transition to RecipePage\n  const chooseRecipe = id => {\n    navigate(`/recipe/${id}`);\n  };\n\n  return (\n    <ThemeWrap>\n      <Container>\n        {!error && <Title>Categories</Title>}\n\n        <CategoriesList onError={el => setError(el)} />\n\n        {!error && (\n          <Grid\n            container\n            pt={{ xs: '32px', md: '50px' }}\n            mb={{ xs: '60px', md: '100px' }}\n            rowSpacing={{ xs: 3.5, md: 4, lg: 12.5 }}\n            columnSpacing={{ md: 4, lg: 1.5 }}\n          >\n            {recipieArr &&\n              recipieArr.length &&\n              recipieArr?.map(({ _id, title, thumb }) => (\n                <Grid item xs={12} md={6} lg={3} key={_id}>\n                  <CardCategorie\n                    handleRecipe={chooseRecipe}\n                    id={_id}\n                    title={title}\n                    thumb={thumb}\n                  ></CardCategorie>\n                </Grid>\n              ))}\n          </Grid>\n        )}\n\n        {!error && (\n          <Pagination\n            sx={{\n              display: 'flex',\n              justifyContent: 'center',\n              p: '50px 0 100px',\n            }}\n            count={totalPages}\n            page={page}\n            onChange={setPageHandler}\n            variant=\"outlined\"\n            color=\"primary\"\n            size=\"large\"\n          />\n        )}\n\n        {error && <NotFoundPage />}\n      </Container>\n    </ThemeWrap>\n  );\n};\n\nexport default CategoriesPage;\n"],"names":["axios","baseUrl","fetchCategories","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","sent","abrupt","data","stop","apply","arguments","fetchRecipies","categoryName","page","limit","_args","length","undefined","concat","_x","getRecipeById","recipeId","res","fetchRecipesMainPage","_require","require","ThemeWrap","styled","Box","backgroundColor","theme","palette","background","default","id","title","thumb","handleRecipe","_jsx","Card","onClick","sx","position","children","_jsxs","CardActionArea","CardMedia","height","width","borderRadius","component","image","alt","CardContent","p","left","right","bottom","Typography","variant","color","fontFamily","fontSize","fontWeight","lineHeight","letterSpacing","text","primary","Title","TitleTheme","pt","xs","md","lg","mb","CategoriesList","onError","_useState","useState","_useState2","_slicedToArray","err","setErr","_useState3","_useState4","categoriesArr","setCategoriesArr","useParams","navigate","useNavigate","useEffect","categoriesList","_ref2","t0","API","t1","t2","console","log","find","name","toLowerCase","Tabs","mt","borderBottom","value","onChange","event","newValue","scrollButtons","map","categ","Tab","py","px","textTransform","label","recipieArr","setRecipieArr","setPage","_useState5","_useState6","totalPages","setTotalPages","_useState7","_useState8","error","setError","oneCategorie","recipes","Error","tempCategoryName","setPageHandler","_callee2","_","_context2","_x2","_x3","chooseRecipe","Container","el","Grid","container","rowSpacing","columnSpacing","_ref3","_id","item","CardCategorie","Pagination","display","justifyContent","count","size","NotFoundPage"],"sourceRoot":""}